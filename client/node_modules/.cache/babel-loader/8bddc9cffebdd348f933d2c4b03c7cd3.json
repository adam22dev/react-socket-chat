{"ast":null,"code":"import _objectSpread from \"/Users/ru/code/repaso-bootcamp/socket-chat/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/ru/code/repaso-bootcamp/socket-chat/src/Chat.jsx\";\nimport React, { Component } from 'react';\nimport { Container } from 'bloomer';\nimport { Columns } from 'bloomer/lib/grid/Columns';\nimport { Column } from 'bloomer/lib/grid/Column';\nimport { Box } from 'bloomer/lib/elements/Box';\nimport { Content } from 'bloomer/lib/elements/Content';\nimport { Input } from 'bloomer/lib/elements/Form/Input';\nimport { Control } from 'bloomer/lib/elements/Form/Control';\nimport { Button } from 'bloomer/lib/elements/Button';\nimport { Field } from 'bloomer/lib/elements/Form/Field/Field';\nexport default class Chat extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      messagesList: [{\n        user: \"pepe\",\n        message: \"hola\"\n      }],\n      message: \"\"\n    };\n  }\n\n  submitMessage(e) {\n    e.preventDefault();\n\n    if (this.state.message.trim() !== \"\") {\n      const messages = [...this.state.messagesList];\n      messages.push({\n        user: this.props.userName,\n        message: this.state.message\n      });\n      this.setState(_objectSpread({}, this.state, {\n        messagesList: messages,\n        message: \"\"\n      }));\n    }\n  }\n\n  handleChange(e) {\n    console.log(e.target.value);\n    this.setState({\n      message: e.target.value\n    });\n  }\n\n  render() {\n    const _this$props = this.props,\n          users = _this$props.users,\n          userName = _this$props.userName;\n\n    if (!userName) {\n      this.props.history.push(\"/\");\n    }\n\n    return React.createElement(Container, {\n      className: \"chat-container is-fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Columns, {\n      isSize: \"1/4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Column, {\n      className: \"users-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Users list\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, users.map((user, idx) => {\n      return user === userName ? React.createElement(\"li\", {\n        key: idx,\n        className: \"current-user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, user) : React.createElement(\"li\", {\n        key: idx,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, user);\n    }))), React.createElement(Column, {\n      isSize: \"3/4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Box, {\n      className: \"chat-area\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, this.state.messagesList.map((message, idx) => {\n      return React.createElement(\"p\", {\n        key: idx,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, message.user, \": \", message.message, \" \");\n    })), React.createElement(\"form\", {\n      className: \"text-form\",\n      onSubmit: e => this.submitMessage(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Field, {\n      isGrouped: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Input, {\n      onChange: e => this.handleChange(e),\n      type: \"text\",\n      placeholder: \"write a message...\",\n      value: this.state.message,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(Control, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Button, {\n      isColor: \"danger\",\n      onClick: e => this.submitMessage(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Send\"))))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/ru/code/repaso-bootcamp/socket-chat/src/Chat.jsx"],"names":["React","Component","Container","Columns","Column","Box","Content","Input","Control","Button","Field","Chat","constructor","props","state","messagesList","user","message","submitMessage","e","preventDefault","trim","messages","push","userName","setState","handleChange","console","log","target","value","render","users","history","map","idx"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nimport { Container } from 'bloomer';\nimport { Columns } from 'bloomer/lib/grid/Columns';\nimport { Column } from 'bloomer/lib/grid/Column';\nimport { Box } from 'bloomer/lib/elements/Box';\nimport { Content } from 'bloomer/lib/elements/Content';\nimport { Input } from 'bloomer/lib/elements/Form/Input';\nimport { Control } from 'bloomer/lib/elements/Form/Control';\nimport { Button } from 'bloomer/lib/elements/Button';\nimport { Field } from 'bloomer/lib/elements/Form/Field/Field';\n\nexport default class Chat extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      messagesList: [\n        {user: \"pepe\",\n      message: \"hola\"}\n      ],\n      message: \"\"\n    }\n  }\n\n  submitMessage(e){\n    e.preventDefault()\n    if(this.state.message.trim() !== \"\"){\n      const messages = [...this.state.messagesList]\n    messages.push({\n      user: this.props.userName,\n      message: this.state.message\n    })\n\n    this.setState({\n      ...this.state,\n      messagesList: messages,\n      message: \"\"\n    })\n    }\n    \n\n  }\n\n  handleChange(e){\n    console.log(e.target.value)\n    this.setState({message: e.target.value})\n  }\n\n  render() {\n    const {users, userName} = this.props\n\n    if(!userName){\n      this.props.history.push(\"/\")\n\n    }\n\n    return (\n      <Container  className=\"chat-container is-fluid\">\n      <Content>\n      <Columns isSize=\"1/4\">\n        <Column className=\"users-list\">\n        <h2 className=\"title\">Users list</h2>\n        <ul>\n          {users.map((user, idx) => {\n            return user===userName?\n            <li key={idx} className=\"current-user\">{user}</li>:\n            <li key={idx}>{user}</li>\n          })}\n        </ul>\n        </Column>\n        <Column  isSize=\"3/4\">\n        <Box className=\"chat-area\">\n        {this.state.messagesList.map((message, idx) =>{\n          return <p key={idx}>{message.user}: {message.message} </p>\n        })}\n        </Box>\n        <form className=\"text-form\" onSubmit={(e) => this.submitMessage(e)}>\n          <Field isGrouped>\n          <Input\n            onChange={e => this.handleChange(e)}\n            type=\"text\" \n            placeholder=\"write a message...\"\n            value={this.state.message}/>\n          <Control>\n            <Button \n              isColor=\"danger\"\n              onClick={(e) => this.submitMessage(e)}>\n              Send\n            </Button>\n          </Control>\n          \n          </Field>\n        </form>\n        </Column>\n      </Columns>\n\n      </Content>\n      </Container>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}