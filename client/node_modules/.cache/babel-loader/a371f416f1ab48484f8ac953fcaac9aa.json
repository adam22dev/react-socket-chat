{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tslib_1 = require(\"tslib\");\n\nvar classNames = require(\"classnames\");\n\nvar React = require(\"react\");\n\nvar bulma_1 = require(\"./../../../bulma\");\n\nvar helpers_1 = require(\"./../../../helpers\");\n\nvar getModifier = function getModifier(modifier, helper, isDirection) {\n  var _a, _b;\n\n  if (modifier === true) {\n    return _a = {}, _a[\"\" + helper] = true, _a;\n  } else if (typeof modifier === 'string') {\n    return isDirection(modifier) ? (_b = {}, _b[helper + \" \" + helper + \"-\" + modifier] = true, _b) : {};\n  }\n\n  return {};\n};\n\nfunction Field(_a) {\n  var _b = _a.tag,\n      tag = _b === void 0 ? 'div' : _b,\n      props = tslib_1.__rest(_a, [\"tag\"]);\n\n  var className = classNames('field', tslib_1.__assign({}, getModifier(props.isGrouped, 'is-grouped', helpers_1.isOption(bulma_1.isRight, bulma_1.isCentered)), getModifier(props.hasAddons, 'has-addons', helpers_1.isOption(bulma_1.isRight, bulma_1.isCentered, bulma_1.isFullWidth)), {\n    'is-horizontal': props.isHorizontal\n  }), props.className);\n\n  var isGrouped = props.isGrouped,\n      hasAddons = props.hasAddons,\n      isHorizontal = props.isHorizontal,\n      HTMLProps = tslib_1.__rest(props, [\"isGrouped\", \"hasAddons\", \"isHorizontal\"]);\n\n  return React.createElement(tag, tslib_1.__assign({}, HTMLProps, {\n    className: className\n  }));\n}\n\nexports.Field = Field;\nvar HOC = bulma_1.withHelpersModifiers(Field);\nexports.default = HOC;","map":null,"metadata":{},"sourceType":"script"}