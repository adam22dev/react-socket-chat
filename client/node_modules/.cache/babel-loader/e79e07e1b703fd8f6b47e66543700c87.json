{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tslib_1 = require(\"tslib\");\n\nvar classNames = require(\"classnames\");\n\nvar React = require(\"react\");\n\nvar bulma_1 = require(\"./../../bulma\");\n\nvar helpers_1 = require(\"./../../helpers\");\n\nvar isDirection = helpers_1.isOption(bulma_1.isLeft, bulma_1.isRight);\n\nvar getModifier = function getModifier(modifier) {\n  var _a;\n\n  if (modifier === true) {\n    return {\n      'has-icons-left has-icons-right': true\n    };\n  } else if (typeof modifier === 'string') {\n    return isDirection(modifier) ? (_a = {}, _a[\"has-icons-\" + modifier] = true, _a) : {};\n  } else if (Array.isArray(modifier)) {\n    return modifier.map(function (str) {\n      return str.toLowerCase().trim();\n    }).reduce(function (init, option) {\n      var _a;\n\n      return isDirection(option) ? tslib_1.__assign({}, init, (_a = {}, _a[\"has-icons-\" + option] = true, _a)) : init;\n    }, {});\n  }\n\n  return {};\n};\n\nfunction Control(_a) {\n  var _b = _a.tag,\n      tag = _b === void 0 ? 'div' : _b,\n      props = tslib_1.__rest(_a, [\"tag\"]);\n\n  var className = classNames('control', tslib_1.__assign({}, getModifier(props.hasIcons), {\n    'is-expanded': props.isExpanded\n  }, bulma_1.getLoadingModifiers(props)), props.className);\n\n  var hasIcons = props.hasIcons,\n      isExpanded = props.isExpanded,\n      rest = tslib_1.__rest(props, [\"hasIcons\", \"isExpanded\"]);\n\n  var HTMLProps = helpers_1.getHTMLProps(rest, bulma_1.removeLoadingProps);\n  return React.createElement(tag, tslib_1.__assign({}, HTMLProps, {\n    className: className\n  }));\n}\n\nexports.Control = Control;\nvar HOC = bulma_1.withHelpersModifiers(Control);\nexports.default = HOC;","map":null,"metadata":{},"sourceType":"script"}